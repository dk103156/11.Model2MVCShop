<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
 	
 	
	<resultMap id="purchaseSelectMap" type="purchase">
		<result property="tranNo" 									column="tran_no" 							jdbcType="NUMERIC"/>
		<result property="purchaseProd.prodNo"		column="prod_no" 							jdbcType="NUMERIC" />
		<result property="buyer.userId" 							column="buyer_id" 							jdbcType="VARCHAR" />
		<result property="paymentOption" 					column="payment_option" 			jdbcType="CHAR" />
		<result property="receiverName" 						column="receiver_name" 				jdbcType="VARCHAR" />
		<result property="receiverPhone" 						column="receiver_phone" 				jdbcType="VARCHAR" />
		<result property="divyAddr" 								column="demailaddr" 					jdbcType="VARCHAR" />
		<result property="divyRequest" 							column="dlvy_request" 					jdbcType="VARCHAR"  />
		<result property="tranCode" 								column="tran_status_code" 			jdbcType="CHAR" />
		<result property="orderDate" 								column="order_date" 						jdbcType="DATE" />
		<result property="divyDate" 								column="dlvy_date" 						jdbcType="DATE" />
	</resultMap>
	
<!-- association 으로 users, product 의 모든 column 을 갖고옴 -->
<!-- 		
	<resultMap id="purchaseSelectMap" type="purchase">
	
		<result property="tranNo" column="tran_no" jdbcType="NUMERIC"/>
		<result property="paymentOption" column="payment_option" jdbcType="CHAR"/>
		<result property="receiverName" column="receiver_name" jdbcType="VARCHAR"/>
		<result property="receiverPhone" column="receiver_phone" jdbcType="VARCHAR"/>
		<result property="dlvyAddr" column="dlvy_addr" jdbcType="VARCHAR"/>
		<result property="dlvyRequest" column="dlvy_request" jdbcType="VARCHAR"/>
		<result property="tranCode" column="tran_status_code" jdbcType="CHAR"/>
		<result property="orderDate" column="order_date" jdbcType="DATE"/>
		<result property="dlvyDate" column="dlvy_date" jdbcType="VARCHAR"/>
		
		<association property="purchaseProd"  javaType="product">
			<id property="prodNo" column="prod_no" jdbcType="NUMERIC"/>
			<result property="prodName" column="prod_name" jdbcType="VARCHAR"/>
			<result property="prodDetail" column="prod_detail" jdbcType="VARCHAR"/>
			<result property="manuDate" column="manufacture_day" jdbcType="VARCHAR"/>
			<result property="price" column="price" jdbcType="NUMERIC"/>
			<result property="fileName" column="image_file" jdbcType="VARCHAR"/>
			<result property="regDate" column="prod_reg_date" jdbcType="DATE"/>
			<result property="prodTranCode" column="TRAN_STATUS_CODE" jdbcType="VARCHAR"/>
		</association>
		
		<association property="buyer"  javaType="user">
			<id property="userId" column="buyer_id" jdbcType="VARCHAR"/>
			<result property="userName" column="user_name" jdbcType="VARCHAR"/>
			<result property="password" column="password" jdbcType="VARCHAR"/>
			<result property="role" column="role" jdbcType="VARCHAR"/>
			<result property="ssn" column="ssn" jdbcType="VARCHAR"/>
			<result property="phone" column="cell_phone" jdbcType="VARCHAR"/>
			<result property="addr" column="addr" jdbcType="VARCHAR"/>
			<result property="email" column="email" jdbcType="VARCHAR"/>
			<result property="regDate" column="user_reg_date" jdbcType="DATE"/>
		</association>
		
	</resultMap> 
-->
	
	<!-- SQL : INSERT -->
	<insert 	id="addPurchase"		parameterType="purchase" >
	 	INSERT
		INTO transaction( tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, demailaddr, dlvy_request, tran_status_code, order_date, dlvy_date ) 
		VALUES	 (	seq_transaction_tran_no.NEXTVAL, 
							#{purchaseProd.prodNo:NUMERIC}, 
							#{buyer.userId:VARCHAR}, 
							#{paymentOption:CHAR},
							#{receiverName:VARCHAR},
							#{receiverPhone:VARCHAR},
							#{divyAddr:VARCHAR},
							#{divyRequest:VARCHAR},
							'1',
							SYSDATE,
							#{divyDate:DATE} )
	 </insert>
	 
	 
	 <!-- SQL : SELECT ONE -->
<!-- 	 <select 	id="getPurchase"	parameterType="int"	resultMap="purchaseSelectMap">
		SELECT
		tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, demailaddr, dlvy_request, tran_status_code, order_date, dlvy_date 		
		FROM transaction 
		WHERE tran_no = #{value}
	 </select> -->
	 
	 <select 	id="getPurchase"	parameterType="int"	resultMap="purchaseSelectMap">
	 	SELECT 
	 	t.*, u.*, p.*
		FROM transaction t, product p, users u
		WHERE t.prod_no = p.prod_no 
						AND t.buyer_id = u.user_id 
						AND t.tran_no = #{value}
	</select>		
		 
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updatePurchase"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
			payment_option = #{paymentOption:CHAR},
			receiver_name = #{receiverName:VARCHAR},
			receiver_phone = #{receiverPhone:VARCHAR},
			demailaddr = #{divyAddr:VARCHAR},
			dlvy_request = #{divyRequest:VARCHAR},
			dlvy_date = #{divyDate:DATE}
	   	</set>
	   	WHERE tran_no = #{tranNo}
	 </update>
	 
	 
	 <!-- SQL : UPDATE (TranCode) -->
  	 <update id="updateTranCode" parameterType="purchase">
  		UPDATE transaction
  		<set>
		tran_status_code = #{tranCode}
  		</set>
		WHERE tran_no = #{tranNo}
  	</update>
  	
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getPurchaseList"  parameterType="map"	resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM	(	SELECT t.*
											FROM transaction t, product p, users u 
											WHERE t.prod_no = p.prod_no 
											AND t.buyer_id = u.user_id 
											AND u.user_id = #{buyerId}
											ORDER BY tran_no ) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
	 	<!--  
	 			위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
				
				<select id="getPurchaseList" parameterType="map" resultMap="purchaseSelectMap">
				  		SELECT *
				  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
				  						FROM ( SELECT t.tran_no, p.prod_no, t.order_date, t.tran_status_code 
														FROM transaction t, product p, users u 
														WHERE t.prod_no = p.prod_no 
														AND t.buyer_id = u.user_id 
														AND u.user_id = #{buyerId}
														ORDER BY tran_no  ) inner_table
				  						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
				  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
				  		AND #{search.currentPage}*#{search.pageSize}
				</select>
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="string"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT t.*
						FROM transaction t, product p, users u 
						WHERE t.prod_no = p.prod_no 
						AND t.buyer_id = u.user_id 
						AND u.user_id = #{buyerId}
						ORDER BY tran_no  ) countTable						
	 </select>
	 
	 
	<select id="getSaleList" parameterType="search" resultMap="purchaseSelectMap">
		SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
			  			FROM ( SELECT * FROM transaction ORDER BY tran_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	</select>
	
	
	<select id="getTotalCountSale" resultType="int">
		SELECT COUNT(*)
		FROM ( SELECT * FROM transaction ORDER BY tran_no ) countTable
	</select>	 
	 
	 
</mapper>